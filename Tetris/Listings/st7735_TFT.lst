C51 COMPILER V9.59.0.0   ST7735_TFT                                                        04/18/2019 23:31:46 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE ST7735_TFT
OBJECT MODULE PLACED IN .\Objects\st7735_TFT.obj
COMPILER INVOKED BY: D:\Program Files (x86)\keil_v5\C51\BIN\C51.EXE st7735_TFT.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEX
                    -TEND PRINT(.\Listings\st7735_TFT.lst) TABS(2) OBJECT(.\Objects\st7735_TFT.obj)

line level    source

   1          #include <BasicSet.c>
   2          #define TFT_Width       128
   3          #define TFT_Height      160
   4          
   5          unsigned int xdata Area[20];
   6          unsigned int xdata *data pArea=Area;
   7          unsigned char data trackSquare[6];
   8          unsigned char xdata groundx[20];
   9          unsigned char data tetris[5] = {0x00,0x0c,0x08,0x08,0};       //低四位存行数据
  10          unsigned char data ground[5];
  11          unsigned char square_x = 4, square_y = 0;
  12          
  13          void fillRectangle(unsigned char x, unsigned char y, unsigned char w, unsigned char h, unsigned int color)
             -{
  14   1        if((x >= TFT_Width) || (y >= TFT_Height))
  15   1          return;
  16   1        if((x + w - 1) >= TFT_Width)
  17   1          w = TFT_Width  - x;
  18   1        if((y + h - 1) >= TFT_Height)
  19   1          h = TFT_Height - y;
  20   1        Lcd_SetRegion(x, y, x+w-1, y+h-1);
  21   1        for(y = h; y > 0; y--) {
  22   2          for(x = w; x > 0; x--) {
  23   3            Lcd_WriteData_16(color);
  24   3          }
  25   2        }
  26   1      }
  27          // 8X8 square
  28          void fillPoint(unsigned char x, unsigned char y, unsigned int color ) {
  29   1        unsigned char i;
  30   1        x *= 8;
  31   1        y *= 8;
  32   1        Lcd_SetRegion(x, y, x+7, y+7);
  33   1        for(i = 64; i > 0; i-- )
  34   1          Lcd_WriteData_16(color);
  35   1      }
  36          //显示俄罗斯方块
  37          void print_Tetris(unsigned char x, unsigned char y, unsigned int cube, unsigned int color){
  38   1        unsigned char row, i,bit_row,j;
  39   1        for(i = 0; i < 4; i++){               //4行
  40   2          row = cube & 0x0f;                  //取出低4位保存在row中
  41   2          cube >>= 4;
  42   2          bit_row = 0x08;
  43   2          for(j=0; j < 4; j++){
  44   3            if(row & bit_row)                 //按位判断，显示一行
  45   3              fillPoint(x+j,y+3-i,color);     //先显示数据的低4位，y值反而最大
  46   3            bit_row >>= 1;
  47   3          }
  48   2        }
  49   1      }
  50          
  51          void trackSquare_Read(unsigned char x, unsigned char y){
  52   1        unsigned int xdata *p = Area;
  53   1        unsigned char i;
C51 COMPILER V9.59.0.0   ST7735_TFT                                                        04/18/2019 23:31:46 PAGE 2   

  54   1        p += y;           //数据开始行
  55   1        for(i = 0; i < 6; i++){
  56   2          trackSquare[i] = (*p >> (9-x)) & 0x3f; //取出6位数据，右移 11-6-x = 5-x位，再屏蔽高两位
  57   2          p++;
  58   2        }
  59   1      
  60   1        for(i = 0; i < 6; i++){
  61   2          ground[i] = (groundx[y+i] >> (9-x)); //取出6位数据，右移 11-6-x = 5-x位，再屏蔽高两位
  62   2          p++;
  63   2        }
  64   1      }
  65          
  66          void trackSquare_Write(unsigned char x, unsigned char y){
  67   1        unsigned int xdata *p = Area;
  68   1        unsigned char i;
  69   1        unsigned int a;
  70   1        p += y;
  71   1        for(i = 0; i < 6; i++ ){
  72   2          a = trackSquare[i];
  73   2          a <<= (9-x);
  74   2          *p |= a;
  75   2          p++;
  76   2        }
  77   1      
  78   1      }
  79          
  80          //Show trackSquare
  81          unsigned char showTrackSquare_Down(unsigned char x, unsigned char y, unsigned int color){
  82   1        signed char i,j;
  83   1        unsigned char data temptrack[6],aa[6];
  84   1        unsigned char data *pTrack =trackSquare;
  85   1        unsigned char data *pTemp = temptrack;
  86   1        unsigned char row;
  87   1        for(i = 0; i < 6; i++)
  88   1          temptrack[i] = *pTrack++;
  89   1      
  90   1        for(i = 0; i < 6; i++ )
  91   1          trackSquare[i]=0;                              //清零
  92   1        for(i = 0; i < 4; i++){                         //指向第5行
  93   2          row = tetris[i] << 1;
  94   2          if((ground[5-i] & row) > 0){
  95   3            fillPoint(1,1,RED);
  96   3            return 1;
  97   3          }
  98   2      
  99   2          trackSquare[5-i] = ground[5-i] | row;             //track区域与俄罗斯方块相或,保存这次移动操作的数据
 100   2        }
 101   1        pTemp = &temptrack[0];
 102   1        pTrack = trackSquare;
 103   1        for(i = 0; i < 6; i++){
 104   2          aa[i] = *pTrack ^ *pTemp;
 105   2          pTrack++;
 106   2          pTemp++;                            //异或得到改变位存入aa
 107   2        }
 108   1        for(i = 0; i < 6; i++){                 //逐行扫描
 109   2          if(aa[i]){                           //异或值为真，改变颜色
 110   3            row = 0x10;
 111   3            for(j = 0; j < 6; j++){             //行内扫描
 112   4              if(aa[i] & row ){                 //按位判断
 113   5                if(temptrack[i] & row)        //原来的值为真，改成背景色（黑色），否则填充颜色
 114   5                  fillPoint(x+j+1,y+i,BLACK);
 115   5                else
C51 COMPILER V9.59.0.0   ST7735_TFT                                                        04/18/2019 23:31:46 PAGE 3   

 116   5                  fillPoint(x+j+1,y+i,color);
 117   5              }
 118   4              row >>= 1;
 119   4            }
 120   3          }
 121   2        }
 122   1        return 0;
 123   1      }
 124          
 125          
 126          //游戏界面12X20，用一个16位数据保存一行，高4位无效，共20行，20个数据
 127          void tetris_Storage(unsigned int cube){
 128   1        unsigned char i;
 129   1        for(i = 0; i < 4; i++){
 130   2          tetris[i] = cube & 0x0f;
 131   2          cube >>= 4;
 132   2        }
 133   1      }
 134          void main(void)
 135          {
 136   1        unsigned char i;
 137   1        for(i = 0; i < 6; i++){
 138   2          ground[i]=0;
 139   2        }
 140   1        for(i = 0; i < 20; i++){
 141   2          groundx[i]=0;
 142   2          Area[i]=0;
 143   2        }
 144   1        groundx[18] = 0xffff;
 145   1        lcd_initial(); //液晶屏初始化
 146   1        bl=1;//背光采用IO控制，也可以直接接到高电平常亮
 147   1        LCD_Clear(WHITE);   //黑色
 148   1      
 149   1        print_Tetris(square_x+1,5,0x88c0,YELLOW);
 150   1        delay(500);
 151   1        trackSquare_Read(square_x,4);
 152   1      
 153   1        trackSquare_Write(square_x,4);
 154   1        i = 0;
 155   1        while(1){
 156   2          trackSquare_Read(square_x,5+i);
 157   2          if(showTrackSquare_Down(square_x, 5+i, RED ) == 1)
 158   2            break;
 159   2          trackSquare_Write(square_x,5+i);
 160   2      
 161   2          delay(1000);
 162   2          i++;
 163   2        }
 164   1        while(1)
 165   1        {
 166   2        delay(500);
 167   2         }
 168   1      
 169   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1864    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     60    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     20      56
C51 COMPILER V9.59.0.0   ST7735_TFT                                                        04/18/2019 23:31:46 PAGE 4   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
