C51 COMPILER V9.59.0.0   BASICSET                                                          04/16/2019 18:08:48 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE BASICSET
OBJECT MODULE PLACED IN .\Objects\BasicSet.obj
COMPILER INVOKED BY: D:\Program Files (x86)\keil_v5\C51\BIN\C51.EXE BasicSet.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTE
                    -ND PRINT(.\Listings\BasicSet.lst) TABS(2) OBJECT(.\Objects\BasicSet.obj)

line level    source

   1          //////////////////////////////////////////////////////////////////////////////////
   2          //本程序只供学习使用，未经作者许可，不得用于其它任何用途
   3          //测试硬件：STC51
   4          //1.44寸TFT_ST7735液晶驱动
   5          //版权所有，盗版必究。
   6          //Copyright(C) 中景园电子
   7          //All rights reserved
   8          //********************************************************************************
   9          
  10          #include<reg51.h>
  11          #include<absacc.h>
  12          #include<intrins.h>
  13          #include<string.h>
  14          #define uchar unsigned char
  15          #define uint unsigned int
  16          #define TFT_Width       128
  17          #define TFT_Height      160
  18          #define ST7735_NOP     0x00     //空指令
  19          #define ST7735_SWRESET 0x01
  20          #define ST7735_RDDID   0x04
  21          #define ST7735_RDDST   0x09
  22          #define ST7735_SLPIN   0x10
  23          #define ST7735_SLPOUT  0x11
  24          #define ST7735_PTLON   0x12
  25          #define ST7735_NORON   0x13
  26          #define ST7735_INVOFF  0x20
  27          #define ST7735_INVON   0x21
  28          #define ST7735_DISPOFF 0x28
  29          #define ST7735_DISPON  0x29
  30          #define ST7735_CASET   0x2A
  31          #define ST7735_RASET   0x2B
  32          #define ST7735_RAMWR   0x2C
  33          #define ST7735_RAMRD   0x2E
  34          #define ST7735_PTLAR   0x30
  35          #define ST7735_VSCRDEF 0x33
  36          #define ST7735_COLMOD  0x3A
  37          #define ST7735_MADCTL  0x36
  38          #define ST7735_VSCRSADD 0x37
  39          #define ST7735_FRMCTR1 0xB1
  40          #define ST7735_FRMCTR2 0xB2
  41          #define ST7735_FRMCTR3 0xB3
  42          #define ST7735_INVCTR  0xB4
  43          #define ST7735_DISSET5 0xB6
  44          #define ST7735_PWCTR1  0xC0
  45          #define ST7735_PWCTR2  0xC1
  46          #define ST7735_PWCTR3  0xC2
  47          #define ST7735_PWCTR4  0xC3
  48          #define ST7735_PWCTR5  0xC4
  49          #define ST7735_VMCTR1  0xC5
  50          #define ST7735_RDID1   0xDA
  51          #define ST7735_RDID2   0xDB
  52          #define ST7735_RDID3   0xDC
  53          #define ST7735_RDID4   0xDD
  54          #define ST7735_PWCTR6  0xFC
C51 COMPILER V9.59.0.0   BASICSET                                                          04/16/2019 18:08:48 PAGE 2   

  55          #define ST7735_GMCTRP1 0xE0
  56          #define ST7735_GMCTRN1 0xE1
  57          
  58          //测试硬件平台：STC12LE5A60S2(3.3V单片机)
  59          //主频：12MHZ
  60          //---------------------------液晶屏接线说明-------------------------------------//
  61          //接线前请参考液晶屏说明书第10页引脚定义
  62          sbit bl        =P1^5;//接模块BL引脚，背光可以采用IO控制或者PWM控制，也可以直接接到高电平常亮
  63          sbit scl       =P1^0;//接模块CLK引脚,接裸屏Pin9_SCL
  64          sbit sda       =P1^1;//接模块DIN/MOSI引脚，接裸屏Pin8_SDA
  65          sbit rs        =P1^3;//接模块D/C引脚，接裸屏Pin7_A0
  66          sbit cs        =P1^4;//接模块CE引脚，接裸屏Pin12_CS
  67          sbit reset     =P1^2;//接模块RST引脚，接裸屏Pin6_RES
  68          //---------------------------End of液晶屏接线---------------------------------//
  69          
  70          
  71          //定义常用颜色
  72          #define RED     0xf800
  73          #define GREEN   0x07e0
  74          #define BLUE    0x001f
  75          #define WHITE   0xffff
  76          #define BLACK   0x0000
  77          #define YELLOW  0xFFE0
  78          #define GRAY0   0xEF7D
  79          #define GRAY1   0x8410
  80          #define GRAY2   0x4208
  81          
  82          void delay(uint time)
  83          {
  84   1       uint i,j;
  85   1        for(i=0;i<time;i++)
  86   1         for(j=0;j<250;j++);
  87   1      }
  88          
  89          //向SPI总线传输一个8位数据
  90          void  SPI_WriteData(uchar Data)
  91          {
  92   1          unsigned char i=0;
  93   1        for(i=8;i>0;i--)
  94   1        {
  95   2          if(Data&0x80)
  96   2          sda=1; //输出数据
  97   2          else sda=0;
  98   2          scl=0;
  99   2          scl=1;
 100   2          Data<<=1;
 101   2        }
 102   1      }
 103          //向液晶屏写一个8位指令
 104          void  Lcd_WriteIndex(uchar Data)
 105          {
 106   1      
 107   1          cs=0;
 108   1          rs=0;
 109   1          SPI_WriteData(Data);
 110   1          cs=1;
 111   1      }
 112          //向液晶屏写一个8位数据
 113          void  Lcd_WriteData(uchar Data)
 114          {
 115   1          unsigned char i=0;
 116   1          cs=0;
C51 COMPILER V9.59.0.0   BASICSET                                                          04/16/2019 18:08:48 PAGE 3   

 117   1          rs=1;
 118   1          SPI_WriteData(Data);
 119   1          cs=1;
 120   1      }
 121          //向液晶屏写一个16位数据
 122          void  Lcd_WriteData_16(unsigned int Data)
 123          {
 124   1        unsigned char i=0;
 125   1        cs=0;
 126   1        rs=1;
 127   1        SPI_WriteData(Data>>8);   //写入高8位数据
 128   1        SPI_WriteData(Data);      //写入低8位数据
 129   1        cs=1;
 130   1      
 131   1      }
 132          //LCD复位时序
 133          void Reset(void)
 134          {
 135   1          reset=0;
 136   1          delay(100);
 137   1          reset=1;
 138   1          delay(100);
 139   1      }
 140          //////////////////////////////////////////////////////////////////////////////////////////////
 141          //液晶屏初始化 for S6D02A1
 142          void lcd_initial(void)
 143          {
 144   1        Reset();//Reset before LCD Init.
 145   1      
 146   1        //LCD Init For 1.44Inch LCD Panel with ST7735R.
 147   1        Lcd_WriteIndex(0x11);//Sleep exit
 148   1        delay (120);
 149   1      
 150   1        //ST7735R Frame Rate
 151   1        Lcd_WriteIndex(0xB1);
 152   1        Lcd_WriteData(0x01);
 153   1        Lcd_WriteData(0x2C);
 154   1        Lcd_WriteData(0x2D);
 155   1      
 156   1        Lcd_WriteIndex(0xB2);
 157   1        Lcd_WriteData(0x01);
 158   1        Lcd_WriteData(0x2C);
 159   1        Lcd_WriteData(0x2D);
 160   1      
 161   1        Lcd_WriteIndex(0xB3);
 162   1        Lcd_WriteData(0x01);
 163   1        Lcd_WriteData(0x2C);
 164   1        Lcd_WriteData(0x2D);
 165   1        Lcd_WriteData(0x01);
 166   1        Lcd_WriteData(0x2C);
 167   1        Lcd_WriteData(0x2D);
 168   1      
 169   1        Lcd_WriteIndex(0xB4); //Column inversion
 170   1        Lcd_WriteData(0x07);
 171   1      
 172   1        //ST7735R Power Sequence
 173   1        Lcd_WriteIndex(0xC0);
 174   1        Lcd_WriteData(0xA2);
 175   1        Lcd_WriteData(0x02);
 176   1        Lcd_WriteData(0x84);
 177   1        Lcd_WriteIndex(0xC1);
 178   1        Lcd_WriteData(0xC5);
C51 COMPILER V9.59.0.0   BASICSET                                                          04/16/2019 18:08:48 PAGE 4   

 179   1      
 180   1        Lcd_WriteIndex(0xC2);
 181   1        Lcd_WriteData(0x0A);
 182   1        Lcd_WriteData(0x00);
 183   1      
 184   1        Lcd_WriteIndex(0xC3);
 185   1        Lcd_WriteData(0x8A);
 186   1        Lcd_WriteData(0x2A);
 187   1        Lcd_WriteIndex(0xC4);
 188   1        Lcd_WriteData(0x8A);
 189   1        Lcd_WriteData(0xEE);
 190   1      
 191   1        Lcd_WriteIndex(0xC5); //VCOM
 192   1        Lcd_WriteData(0x0E);
 193   1      
 194   1        Lcd_WriteIndex(0x36); //MX, MY, RGB mode
 195   1        Lcd_WriteData(0xC0);
 196   1      
 197   1        //ST7735R Gamma Sequence
 198   1        Lcd_WriteIndex(0xe0);
 199   1        Lcd_WriteData(0x0f);
 200   1        Lcd_WriteData(0x1a);
 201   1        Lcd_WriteData(0x0f);
 202   1        Lcd_WriteData(0x18);
 203   1        Lcd_WriteData(0x2f);
 204   1        Lcd_WriteData(0x28);
 205   1        Lcd_WriteData(0x20);
 206   1        Lcd_WriteData(0x22);
 207   1        Lcd_WriteData(0x1f);
 208   1        Lcd_WriteData(0x1b);
 209   1        Lcd_WriteData(0x23);
 210   1        Lcd_WriteData(0x37);
 211   1        Lcd_WriteData(0x00);
 212   1        Lcd_WriteData(0x07);
 213   1        Lcd_WriteData(0x02);
 214   1        Lcd_WriteData(0x10);
 215   1      
 216   1        Lcd_WriteIndex(0xe1);
 217   1        Lcd_WriteData(0x0f);
 218   1        Lcd_WriteData(0x1b);
 219   1        Lcd_WriteData(0x0f);
 220   1        Lcd_WriteData(0x17);
 221   1        Lcd_WriteData(0x33);
 222   1        Lcd_WriteData(0x2c);
 223   1        Lcd_WriteData(0x29);
 224   1        Lcd_WriteData(0x2e);
 225   1        Lcd_WriteData(0x30);
 226   1        Lcd_WriteData(0x30);
 227   1        Lcd_WriteData(0x39);
 228   1        Lcd_WriteData(0x3f);
 229   1        Lcd_WriteData(0x00);
 230   1        Lcd_WriteData(0x07);
 231   1        Lcd_WriteData(0x03);
 232   1        Lcd_WriteData(0x10);
 233   1      
 234   1        Lcd_WriteIndex(0x2a);
 235   1        Lcd_WriteData(0x00);
 236   1        Lcd_WriteData(0x00+2);
 237   1        Lcd_WriteData(0x00);
 238   1        Lcd_WriteData(0x80+2);
 239   1      
 240   1        Lcd_WriteIndex(0x2b);
C51 COMPILER V9.59.0.0   BASICSET                                                          04/16/2019 18:08:48 PAGE 5   

 241   1        Lcd_WriteData(0x00);
 242   1        Lcd_WriteData(0x00+3);
 243   1        Lcd_WriteData(0x00);
 244   1        Lcd_WriteData(0x80+3);
 245   1      
 246   1        Lcd_WriteIndex(0xF0); //Enable test command
 247   1        Lcd_WriteData(0x01);
 248   1        Lcd_WriteIndex(0xF6); //Disable ram power save mode
 249   1        Lcd_WriteData(0x00);
 250   1      
 251   1        Lcd_WriteIndex(0x3A); //65k mode
 252   1        Lcd_WriteData(0x05);
 253   1      
 254   1      
 255   1        Lcd_WriteIndex(0x29);//Display on
 256   1      
 257   1      }
 258          /*************************************************
 259          函数名：LCD_Set_Region
 260          功能：设置lcd显示区域，在此区域写点数据自动换行
 261          入口参数：xy起点和终点
 262          返回值：无
 263          *************************************************/
 264          void Lcd_SetRegion(unsigned int x_start,unsigned int y_start,unsigned int x_end,unsigned int y_end)
 265          {
 266   1        Lcd_WriteIndex(0x2a);
 267   1        Lcd_WriteData(0x01);
 268   1        Lcd_WriteData(x_start+2);
 269   1        Lcd_WriteData(0x01);
 270   1        Lcd_WriteData(x_end+2);
 271   1      
 272   1        Lcd_WriteIndex(0x2b);
 273   1        Lcd_WriteData(0x02);
 274   1        Lcd_WriteData(y_start+1);
 275   1        Lcd_WriteData(0x02);
 276   1        Lcd_WriteData(y_end+1);
 277   1      
 278   1        Lcd_WriteIndex(0x2c);
 279   1      
 280   1      }
 281          
 282          //全屏填充函数
 283          void LCD_Clear(unsigned int Color)
 284          {
 285   1        uchar i,j;
 286   1        Lcd_SetRegion(0,0,127,159);
 287   1        for (i=0;i<160;i++)
 288   1        {
 289   2            for (j=0;j<128;j++)
 290   2          {
 291   3                Lcd_WriteData_16(Color);
 292   3          }
 293   2        }
 294   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    683    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      12
C51 COMPILER V9.59.0.0   BASICSET                                                          04/16/2019 18:08:48 PAGE 6   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
